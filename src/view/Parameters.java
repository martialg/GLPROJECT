/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.util.ArrayList;
import java.util.HashMap;
import model.BFSSearch;
import model.DFSSearch;
import model.Direction;
import model.Graph;
import model.GraphSearch;
import model.Node;
import model.Property;

/**
 *
 * @author Martial
 */
public class Parameters extends javax.swing.JDialog {
    protected MainFrame main_frame;
    protected Graph graph;
    private ArrayList<String> node_authorize;
    protected ArrayList<String> edges_authorize;
    protected HashMap<String, Direction> edge_direction;
    protected HashMap<String, ArrayList<Property>> edge_propreties;
    
    /**
     * Creates new form Parameters
     */
    public Parameters(MainFrame parent, Graph graph) {
        super(parent);
        this.main_frame = parent;
        this.graph = graph;
        this.node_authorize = new ArrayList<String>();
        initComponents();
        this.edges_authorize = new ArrayList<String>();
        this.edge_direction = new HashMap<String, Direction>();
        this.edge_propreties = new HashMap<String, ArrayList<Property>>();
        setVisible(true);
        pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jLabel_choice = new javax.swing.JLabel();
        jLabel_search_mode = new javax.swing.JLabel();
        search_mode = new javax.swing.JComboBox();
        jLabel_level = new javax.swing.JLabel();
        search_level = new javax.swing.JTextField();
        jLabel_unicity = new javax.swing.JLabel();
        unicity = new javax.swing.JComboBox();
        jLabel_start_node = new javax.swing.JLabel();
        start_node = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_restrictions_edge_list = new javax.swing.JTextArea();
        jLabel_restrictions_edge_list = new javax.swing.JLabel();
        jLabel_edge_name = new javax.swing.JLabel();
        edge_name = new javax.swing.JTextField();
        jLabel_property = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        property_name = new javax.swing.JTextField();
        property_value = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel_direction = new javax.swing.JLabel();
        property_direction = new javax.swing.JComboBox();
        jButton_add_edge_property = new javax.swing.JButton();
        jLabel_restrictions_node_list = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea_restrictions_node_list = new javax.swing.JTextArea();
        jLabel_node_name_restriction = new javax.swing.JLabel();
        node_name_restriction = new javax.swing.JTextField();
        jButton_add_node_property = new javax.swing.JButton();
        jButton_cancel = new javax.swing.JButton();
        jButton_search = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel_warning = new javax.swing.JLabel();

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel_choice.setText("CHOIX DE LA RECHERCHE :");

        jLabel_search_mode.setText("Mode de recherche");

        search_mode.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Profondeur", "Largeur" }));

        jLabel_level.setText("Niveau de parcours (-1 pour tout le graphe)");

        search_level.setText("-1");

        jLabel_unicity.setText("Unicité");

        unicity.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "noeudGlobal", "relationGlobal" }));

        jLabel_start_node.setText("Noeud de début");

        jTextArea_restrictions_edge_list.setEditable(false);
        jTextArea_restrictions_edge_list.setColumns(20);
        jTextArea_restrictions_edge_list.setRows(5);
        jScrollPane1.setViewportView(jTextArea_restrictions_edge_list);

        jLabel_restrictions_edge_list.setText("Liste des restrictions sur les arcs");

        jLabel_edge_name.setText("Nom de la relation");

        jLabel_property.setText("Propriété");

        jLabel10.setText("=");

        jLabel_direction.setText("Sens");

        property_direction.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "aucun", "<>", "<", ">" }));

        jButton_add_edge_property.setText("Ajouter relation");
        jButton_add_edge_property.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_add_edge_propertyActionPerformed(evt);
            }
        });

        jLabel_restrictions_node_list.setText("Liste des restrictions sur les noeuds");

        jTextArea_restrictions_node_list.setEditable(false);
        jTextArea_restrictions_node_list.setColumns(20);
        jTextArea_restrictions_node_list.setRows(5);
        jScrollPane2.setViewportView(jTextArea_restrictions_node_list);

        jLabel_node_name_restriction.setText("Nom du noeud");

        jButton_add_node_property.setText("Ajouter noeud");
        jButton_add_node_property.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_add_node_propertyActionPerformed(evt);
            }
        });

        jButton_cancel.setText("Annuler");
        jButton_cancel.setToolTipText("");
        jButton_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_cancelActionPerformed(evt);
            }
        });

        jButton_search.setText("Rechercher");
        jButton_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_searchActionPerformed(evt);
            }
        });

        jLabel_warning.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel_warning.setForeground(java.awt.Color.red);
        jLabel_warning.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_warning.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel_search_mode)
                                    .addComponent(jLabel_level)
                                    .addComponent(jLabel_unicity)
                                    .addComponent(jLabel_start_node)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel_edge_name)
                                            .addComponent(jLabel_property)
                                            .addComponent(jLabel_direction)))
                                    .addComponent(jLabel_restrictions_edge_list)
                                    .addComponent(jLabel_restrictions_node_list)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel_node_name_restriction))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(114, 114, 114)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jButton_cancel)
                                            .addGap(59, 59, 59)
                                            .addComponent(jButton_search)))
                                    .addComponent(jLabel_warning, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(search_mode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search_level, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(unicity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(start_node)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton_add_node_property)
                                    .addComponent(jButton_add_edge_property)
                                    .addComponent(property_direction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(property_name, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(property_value, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(edge_name, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(node_name_restriction, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel_choice)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_choice)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_search_mode)
                    .addComponent(search_mode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_level)
                    .addComponent(search_level, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_unicity)
                    .addComponent(unicity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_start_node)
                    .addComponent(start_node, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(jLabel_restrictions_edge_list)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel_edge_name)
                            .addComponent(edge_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel_property)
                            .addComponent(jLabel9)
                            .addComponent(property_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(property_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel_direction)
                            .addComponent(property_direction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_add_edge_property))
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addComponent(jLabel_restrictions_node_list)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel_node_name_restriction)
                            .addComponent(node_name_restriction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_add_node_property)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_warning)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_cancel)
                    .addComponent(jButton_search))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_add_node_propertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_add_node_propertyActionPerformed
        if(node_name_restriction.getText().compareTo("") != 0){
            if(!this.node_authorize.contains(node_name_restriction.getText())){
                this.node_authorize.add(node_name_restriction.getText());
                refreshNodeList();
                this.node_name_restriction.setText("");
            }
        }
    }//GEN-LAST:event_jButton_add_node_propertyActionPerformed

    private void jButton_add_edge_propertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_add_edge_propertyActionPerformed
        String edge_name = this.edge_name.getText();
        if(edge_name.compareTo("") != 0){
            if(!this.edges_authorize.contains(this.edge_name.getText())){
                this.edges_authorize.add(this.edge_name.getText());
                this.edge_name.setText("");
            }
            String text_direction = this.property_direction.getSelectedItem().toString();
            if(text_direction.compareTo("aucun") != 0){
                if(!this.edge_direction.containsKey(edge_name)){
                    this.edge_direction.remove(edge_name);
                }
                if(text_direction.compareTo("<>") == 0){
                    this.edge_direction.put(edge_name, Direction.BOTH);
                }else if(text_direction.compareTo("<") == 0){
                    this.edge_direction.put(edge_name, Direction.LEFT);
                }else{
                    this.edge_direction.put(edge_name, Direction.RIGHT);
                }
            }
            String property_name_temp = this.property_name.getText();
            String property_value_temp = this.property_value.getText();
            if(property_name_temp.compareTo("") != 0 && property_value_temp.compareTo("") != 0){
                String[] tab = {property_value_temp};
                Property property = new Property(property_name_temp, tab);
                if(edge_propreties.containsKey(edge_name)){
                    ArrayList<Property> list = edge_propreties.get(edge_name);
                    if(list.contains(property)){
                        list.remove(property);
                    }
                    list.add(property);
                }else{
                    ArrayList<Property> list = new ArrayList<Property>();
                    list.add(property);
                    edge_propreties.put(edge_name, list);
                }
            }
            refreshEdgeList();
        }
        this.edge_name.setText("");
        this.property_direction.setSelectedIndex(0);
        this.property_name.setText("");
        this.property_value.setText("");
    }//GEN-LAST:event_jButton_add_edge_propertyActionPerformed

    private void jButton_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_cancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton_cancelActionPerformed

    private void jButton_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_searchActionPerformed
        GraphSearch gs;
        Node start = graph.getNode(this.start_node.getText());
        int level = Integer.parseInt(this.search_level.getText());
        this.jLabel_warning.setText("");
        if(start == null){
            this.jLabel_warning.setText("Le noeud de départ n'héxiste pas");
        }else if(level < -1){
            this.jLabel_warning.setText("Le niveau maximum doit être compris entre -1 et l'infini");
        }else{
            if(search_mode.getSelectedItem().toString().compareTo("Profondeur") == 0){
                gs = new BFSSearch(this.graph, level);
            }else{
                gs = new DFSSearch(this.graph, level);
            }
            if(this.unicity.getSelectedItem().toString().compareTo("noeudGlobal") == 0){
                gs.setUniquenessType(1);
            }else{
                gs.setUniquenessType(2);
            }
            gs.setFilterEdgeAuthorize(edges_authorize);
            gs.setFilterEdgeDirection(edge_direction);
            gs.setFilterEdgeProperties(edge_propreties);
            gs.setFilterNodeAuthorize(node_authorize);
            gs.search(start);
            main_frame.getJ_content().setText(gs.getResultats());
        }
        
    }//GEN-LAST:event_jButton_searchActionPerformed

    private void refreshNodeList(){
        String s = "";
        for(String name : node_authorize)
            s += name +",";
        this.jTextArea_restrictions_node_list.setText(s);
    }
    
    private void refreshEdgeList(){
        String s = "Restrictions sur le nom des arcs :\n";
        for(String e : this.edges_authorize)
            s += e + "\n";
        s += "Restrictions sur les directions :\n";
        for(String e : this.edge_direction.keySet()){
            Direction d = this.edge_direction.get(e);
            if(d == Direction.BOTH){
                s += e + " <>\n";
            }else if(d == Direction.LEFT){
                s += e + " <\n";
            }else{
                s += e + " >\n";
            }
        }
        s += "Restrictions sur les prédicats :\n";
        for(String e : this.edge_propreties.keySet()){
            ArrayList<Property> temp_list = this.edge_propreties.get(e);
            s += e +" : ";
            for(Property p : temp_list){
                s += p.getName() + "=";
                for(String s_temp : p.getValues()){
                    s += s_temp + ",";
                }
                s += "\n";
            }
        }
        this.jTextArea_restrictions_edge_list.setText(s);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField edge_name;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton_add_edge_property;
    private javax.swing.JButton jButton_add_node_property;
    private javax.swing.JButton jButton_cancel;
    private javax.swing.JButton jButton_search;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_choice;
    private javax.swing.JLabel jLabel_direction;
    private javax.swing.JLabel jLabel_edge_name;
    private javax.swing.JLabel jLabel_level;
    private javax.swing.JLabel jLabel_node_name_restriction;
    private javax.swing.JLabel jLabel_property;
    private javax.swing.JLabel jLabel_restrictions_edge_list;
    private javax.swing.JLabel jLabel_restrictions_node_list;
    private javax.swing.JLabel jLabel_search_mode;
    private javax.swing.JLabel jLabel_start_node;
    private javax.swing.JLabel jLabel_unicity;
    private javax.swing.JLabel jLabel_warning;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea_restrictions_edge_list;
    private javax.swing.JTextArea jTextArea_restrictions_node_list;
    private javax.swing.JTextField node_name_restriction;
    private javax.swing.JComboBox property_direction;
    private javax.swing.JTextField property_name;
    private javax.swing.JTextField property_value;
    private javax.swing.JTextField search_level;
    private javax.swing.JComboBox search_mode;
    private javax.swing.JTextField start_node;
    private javax.swing.JComboBox unicity;
    // End of variables declaration//GEN-END:variables
}
